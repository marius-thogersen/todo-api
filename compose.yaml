services:
#  postgres:
#    image: postgres:17-alpine
#    container_name: dev-postgres
#    restart: unless-stopped
#    environment:
#      POSTGRES_USER: todo
#      POSTGRES_PASSWORD: todo
#      POSTGRES_DB: todoapi
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: dev-mssql
    restart: always
    environment:
      ACCEPT_EULA: "Y"                # required
      SA_PASSWORD: "Passw0rd" # SQL Server system admin password
    ports:
      - "1433:1433"                   # expose MSSQL on localhost:1433
    volumes:
      - mssql_data:/var/opt/mssql

#  keycloak:
#    image: quay.io/keycloak/keycloak:26.3
#    container_name: keycloak
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    command: start-dev
#    ports:
#      - "9999:8080"

  nginx:
    image: nginx:1.27-alpine
    container_name: dev-nginx
    ports:
      - "8080:80"
    volumes:
      - ./dev/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    # Needed on Linux so the container can reach services on the host
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    image: node:lts-alpine3.22
    container_name: dev-frontend
    working_dir: /app
    command: sh -c "npm ci && npm run dev -- --host --port 5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  frontend_node_modules:
  mssql_data:
#  postgres_data:
